{"version":3,"file":"palette-picker.service.d.ts","sources":["palette-picker.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { PaletteModel } from '../models/palette.model';\r\nimport { ColorModel } from '../models/color.model';\r\nimport { Subject } from 'rxjs';\r\nexport declare class PalettePickerService {\r\n    /**\r\n     *\r\n     */\r\n    ColorPickerChanged: Subject<PaletteModel>;\r\n    /**\r\n     * Event after color picker has closed\r\n     */\r\n    ColorPickerClosed: Subject<any>;\r\n    /**\r\n     * Current color palette\r\n     */\r\n    CurrentPalette: PaletteModel;\r\n    /**\r\n     * Array of primary colors\r\n     */\r\n    PrimaryColorPalette: Array<ColorModel>;\r\n    /**\r\n     * Array of accent colors\r\n     */\r\n    AccentColorPalette: Array<ColorModel>;\r\n    /**\r\n     * Array of warn colors\r\n     */\r\n    WarnColorPalette: Array<ColorModel>;\r\n    constructor();\r\n    PalettePickerChange(params: PaletteModel): void;\r\n    /**\r\n     * Event when color picker is closed, use this to kick off\r\n     * the process of building color variants and everything else\r\n     * Doing this prevents multiple processes that occur during\r\n     * Form Control changes\r\n     *\r\n     * @param params Selected color from color picker\r\n     */\r\n    CloseColorPicker(params: string): void;\r\n}\r\n"]}