{"version":3,"sources":["./projects/demo/src/app/controls/home/home.component.html","./projects/demo/$_lazy_route_resource lazy namespace object","./projects/demo/src/app/app.module.ts","./projects/demo/src/app/controls/builder/builder.component.html","./projects/demo/src/app/app.component.ts","./projects/demo/src/app/controls/home/home.component.ts","./projects/demo/src/app/app-routing.module.ts","./projects/demo/src/environments/environment.ts","./projects/common/src/lib/models/palette.model.ts","./projects/common/src/lib/services/palette-picker.service.ts","./projects/common/src/lib/services/local-storage.service.ts","./projects/common/src/lib/utils/theme-builder-constants.utils.ts","./projects/common/src/lib/services/palette-template.service.ts","./projects/common/src/lib/services/theme-builder.service.ts","./projects/common/src/lib/controls/theme-builder/theme-builder.component.ts","./projects/common/src/lib/directives/theme-builder.directive.ts","./projects/common/src/lib/controls/color-picker/color-picker.component.ts","./projects/common/src/lib/controls/palette-picker/palette-picker.component.ts","./projects/common/src/lib/controls/sub-palette-picker/sub-palette-picker.component.ts","./projects/common/src/lib/controls/mode-toggle/mode-toggle.component.ts","./projects/common/src/lib/controls/variant-colors/variant-colors.component.ts","./projects/common/src/lib/models/theme-picker.model.ts","./projects/common/src/lib/controls/theme-picker/theme-picker.component.ts","./projects/common/src/lib/theme-builder.module.ts","./projects/common/src/lib/models/theme-builder.model.ts","./projects/common/src/lib/models/sub-palette.model.ts","./projects/common/src/lib/models/theme.model.ts","./projects/common/src/lib/models/color.model.ts","./projects/common/src/lowcodeunit-lcu-theme-builder-common.ts","./projects/demo/src/app/controls/builder/builder.component.ts","./projects/demo/src/main.ts","./projects/demo/src/app/app.component.html","./dist/common/lowcodeunit-lcu-theme-builder-common.d.ts.ThemeBuilderComponent.html","./dist/common/lowcodeunit-lcu-theme-builder-common.d.ts.ɵa.html","./dist/common/lowcodeunit-lcu-theme-builder-common.d.ts.ɵb.html","./dist/common/lowcodeunit-lcu-theme-builder-common.d.ts.ɵe.html","./dist/common/lowcodeunit-lcu-theme-builder-common.d.ts.ɵf.html","./dist/common/lowcodeunit-lcu-theme-builder-common.d.ts.ɵg.html","./dist/common/lowcodeunit-lcu-theme-builder-common.d.ts.ɵh.html"],"names":["tinyColor"],"mappings":"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","file":"main-es2015.js","sourcesContent":["<div fxLayout=\"column\" class=\"home-container\">\r\n  <h1>Welcome to the LCU-Starter-App</h1>\r\n  <div fxLayout=\"column\">\r\n    <div fxLayout=\"row\">\r\n      <p>\r\n        LCU-Starter-App is an Angular Application built and customized by the\r\n        <a href=\"https://github.com/lowcodeunit/lcu-cli\" target=\"_blank\">lcu-cli</a>\r\n        - a implementation of the Angular CLI by Fathym.\r\n      </p>\r\n    </div>\r\n\r\n    <div fxLayout=\"row\">\r\n      <p>\r\n        This starter application provides the baseline library and application structure\r\n        giving developers the freedom to rapidly create data-driven applications. It is\r\n        the first step in Fathym's best practice workflow to build custom Low Code Units\r\n        (LCUs) tailored to your business requirements.\r\n      </p>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"A9V9\";","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FathymSharedModule, MaterialModule } from '@lcu/common';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HomeComponent } from './controls/home/home.component';\r\nimport { ThemeBuilderModule } from '@lowcodeunit/lcu-theme-builder-common';\r\nimport { BuilderComponent } from './controls/builder/builder.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    BuilderComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FathymSharedModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    ThemeBuilderModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  exports: [ThemeBuilderModule]\r\n})\r\nexport class AppModule { }\r\n","<lcu-theme-builder></lcu-theme-builder>\r\n","import { ThemeBuilderService, PalettePickerService, PaletteModel, ThemeBuilderConstants } from '@lowcodeunit/lcu-theme-builder-common';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lcu-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  public Title: string;\r\n\r\n  constructor(protected themeBuilderService: ThemeBuilderService,\r\n    protected palettePickerService: PalettePickerService) {\r\n\r\n    this.Title = 'Theme Builder';\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    this.initialTheme();\r\n  }\r\n\r\n  /**\r\n   * Setup the initial theme based on initial values\r\n   * \r\n   * This will also setup the initial CSS variables\r\n   */\r\n  protected initialTheme(): void {\r\n    let palette: PaletteModel = new PaletteModel();\r\n    palette = { ...ThemeBuilderConstants.InitialValues, ...palette };\r\n\r\n    this.themeBuilderService.Palette = palette;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lcu-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  public ngOnInit(): void { }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './controls/home/home.component';\r\nimport { BuilderComponent } from './controls/builder/builder.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'theme-builder', component: BuilderComponent },\r\n  { path: '', redirectTo: 'theme-builder', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n      RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { SubPaletteModel } from './sub-palette.model';\r\nimport { MaterialPaletteModel } from './material-palette.model';\r\n\r\nexport class PaletteModel {\r\n    public accent: SubPaletteModel;\r\n    public primary: SubPaletteModel;\r\n    public warn: SubPaletteModel;\r\n    public AccentColorPalette?: MaterialPaletteModel;\r\n    public PrimaryColorPalette?: MaterialPaletteModel;\r\n    public WarnColorPalette?: MaterialPaletteModel;\r\n    public ColorMap?: Map<string, object>;\r\n    public darkBackground: string;\r\n    public darkText: string;\r\n    public lightBackground: string;\r\n    public lightText: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PaletteModel } from '../models/palette.model';\r\nimport { ColorModel } from '../models/color.model';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\n\r\nexport class PalettePickerService {\r\n\r\n    /**\r\n     * \r\n     */\r\n    public ColorPickerChanged: Subject<PaletteModel>;\r\n\r\n    /**\r\n     * Event after color picker has closed\r\n     */\r\n    public ColorPickerClosed: Subject<any>;\r\n\r\n    /**\r\n     * Current color palette\r\n     */\r\n    public CurrentPalette: PaletteModel;\r\n\r\n    /**\r\n     * Array of primary colors\r\n     */\r\n    public PrimaryColorPalette: Array<ColorModel>;\r\n\r\n    /**\r\n     * Array of accent colors\r\n     */\r\n    public AccentColorPalette: Array<ColorModel>;\r\n\r\n    /**\r\n     * Array of warn colors\r\n     */\r\n    public WarnColorPalette: Array<ColorModel>;\r\n\r\n    constructor() {\r\n        this.ColorPickerChanged = new BehaviorSubject<PaletteModel>(new PaletteModel());\r\n        this.ColorPickerClosed = new Subject<any>();\r\n    }\r\n\r\n    public PalettePickerChange(params: PaletteModel): void {\r\n\r\n        this.CurrentPalette = { ...params };\r\n        this.ColorPickerChanged.next( this.CurrentPalette );\r\n    }\r\n\r\n    /**\r\n     * Event when color picker is closed, use this to kick off\r\n     * the process of building color variants and everything else\r\n     * Doing this prevents multiple processes that occur during\r\n     * Form Control changes\r\n     * \r\n     * @param params Selected color from color picker\r\n     */\r\n    public CloseColorPicker(params: string): void {\r\n\r\n        this.ColorPickerClosed.next( params );\r\n    }\r\n}\r\n","import { ColorMapModel } from './../models/color-map.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class LocalStorageService {\r\n\r\n    protected colorMap: BehaviorSubject<string>;\r\n    protected storageArray: Array<ColorMapModel>;\r\n\r\n    constructor() {}\r\n\r\n    public ClearColorMapStorage(): void {\r\n        localStorage.clear();\r\n    }\r\n\r\n    public GetColorMapStorage(name: string): string {\r\n        // return this.colorPalette;\r\n        const arr: Array<ColorMapModel> = JSON.parse(localStorage.getItem(name));\r\n        return localStorage.getItem(name);\r\n    }\r\n\r\n    public SetColorMapStorage(colorMap: ColorMapModel): void {\r\n        // if ColorMaps already exists\r\n        if (localStorage.getItem('ColorMaps')) {\r\n\r\n            // return storage, then parse saved string\r\n            this.storageArray = JSON.parse(localStorage.getItem('ColorMaps'));\r\n        } else {\r\n            this.storageArray = [];\r\n        }\r\n\r\n        // update storage array\r\n        this.storageArray.push(colorMap);\r\n        this.updateColorMapStorage();\r\n    }\r\n\r\n    protected updateColorMapStorage(): void {\r\n        localStorage.setItem('ColorMaps', JSON.stringify(this.storageArray));\r\n    }\r\n}\r\n","import { PaletteModel } from '../models/palette.model';\r\n\r\n// @dynamic\r\n/**\r\n * @dynamic need this because there are static members\r\n */\r\n\r\nexport class ThemeBuilderConstants {\r\n    public static MIX_AMOUNTS_PRIMARY = {\r\n        50: [true, 12],\r\n        100: [true, 30],\r\n        200: [true, 50],\r\n        300: [true, 70],\r\n        400: [true, 85],\r\n        500: [true, 100],\r\n        600: [false, 87],\r\n        700: [false, 70],\r\n        800: [false, 54],\r\n        900: [false, 25]\r\n    };\r\n\r\n    public static MIX_AMOUNTS_SECONDARY = {\r\n        A100: [15, 80, 65],\r\n        A200: [15, 80, 55],\r\n        A400: [15, 100, 45],\r\n        A700: [15, 100, 40]\r\n    };\r\n\r\n      public static document = window.getComputedStyle(document.documentElement);\r\n\r\n      public static InitialValues: PaletteModel = {\r\n        primary: { main: ThemeBuilderConstants.document.getPropertyValue('--initial-primary'), lighter: null, darker: null },\r\n        accent: { main: ThemeBuilderConstants.document.getPropertyValue('--initial-accent'), lighter: null, darker: null },\r\n        warn: { main: ThemeBuilderConstants.document.getPropertyValue('--initial-warn'), lighter: null, darker: null },\r\n        lightText: ThemeBuilderConstants.document.getPropertyValue('--initial-light-text'),\r\n        lightBackground: ThemeBuilderConstants.document.getPropertyValue('--initial-light-background'),\r\n        darkText: ThemeBuilderConstants.document.getPropertyValue('--initial-dark-text'),\r\n        darkBackground: ThemeBuilderConstants.document.getPropertyValue('--initial-dark-background')\r\n      };\r\n\r\n  }\r\n","import { ThemeModel } from './../models/theme.model';\r\nimport { SubPaletteModel } from './../models/sub-palette.model';\r\nimport { Injectable } from '@angular/core';\r\nimport * as tinycolor from 'tinycolor2';\r\n\r\nconst tinyColor = tinycolor;\r\ntype RGBA = tinycolor.ColorFormats.RGBA;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n\r\nexport class PaletteTemplateService {\r\n\r\n  /**\r\n   * Return template for scss\r\n   *\r\n   * @param theme current theme\r\n   */\r\n    public GetTemplate(theme: ThemeModel): string {\r\n\r\n      const template = `\r\n\r\n      @import '~@angular/material/theming';\r\n      // Include the common styles for Angular Material. We include this here so that you only\r\n      // have to load a single css file for Angular Material in your app.\r\n\r\n      // Foreground Elements\r\n\r\n      // Light Theme Text\r\n      $dark-text: ${theme.palette.lightText};\r\n      $dark-primary-text: rgba($dark-text, 0.87);\r\n      $dark-accent-text: rgba($dark-primary-text, 0.54);\r\n      $dark-disabled-text: rgba($dark-primary-text, 0.38);\r\n      $dark-dividers: rgba($dark-primary-text, 0.12);\r\n      $dark-focused: rgba($dark-primary-text, 0.12);\r\n\r\n      $mat-light-theme-foreground: (\r\n        base:              black,\r\n        divider:           $dark-dividers,\r\n        dividers:          $dark-dividers,\r\n        disabled:          $dark-disabled-text,\r\n        disabled-button:   rgba($dark-text, 0.26),\r\n        disabled-text:     $dark-disabled-text,\r\n        elevation:         black,\r\n        secondary-text:    $dark-accent-text,\r\n        hint-text:         $dark-disabled-text,\r\n        accent-text:       $dark-accent-text,\r\n        icon:              $dark-accent-text,\r\n        icons:             $dark-accent-text,\r\n        text:              $dark-primary-text,\r\n        slider-min:        $dark-primary-text,\r\n        slider-off:        rgba($dark-text, 0.26),\r\n        slider-off-active: $dark-disabled-text,\r\n      );\r\n\r\n      // Dark Theme text\r\n      $light-text: ${theme.palette.darkText};\r\n      $light-primary-text: $light-text;\r\n      $light-accent-text: rgba($light-primary-text, 0.7);\r\n      $light-disabled-text: rgba($light-primary-text, 0.5);\r\n      $light-dividers: rgba($light-primary-text, 0.12);\r\n      $light-focused: rgba($light-primary-text, 0.12);\r\n\r\n      $mat-dark-theme-foreground: (\r\n        base:              $light-text,\r\n        divider:           $light-dividers,\r\n        dividers:          $light-dividers,\r\n        disabled:          $light-disabled-text,\r\n        disabled-button:   rgba($light-text, 0.3),\r\n        disabled-text:     $light-disabled-text,\r\n        elevation:         black,\r\n        hint-text:         $light-disabled-text,\r\n        secondary-text:    $light-accent-text,\r\n        accent-text:       $light-accent-text,\r\n        icon:              $light-text,\r\n        icons:             $light-text,\r\n        text:              $light-text,\r\n        slider-min:        $light-text,\r\n        slider-off:        rgba($light-text, 0.3),\r\n        slider-off-active: rgba($light-text, 0.3),\r\n      );\r\n\r\n      // Background config\r\n      // Light bg\r\n      $light-background:    ${theme.palette.lightBackground};\r\n      $light-bg-darker-5:   darken($light-background, 5%);\r\n      $light-bg-darker-10:  darken($light-background, 10%);\r\n      $light-bg-darker-20:  darken($light-background, 20%);\r\n      $light-bg-darker-30:  darken($light-background, 30%);\r\n      $light-bg-lighter-5:  lighten($light-background, 5%);\r\n      $dark-bg-alpha-4:     rgba(${theme.palette.darkBackground}, 0.04);\r\n      $dark-bg-alpha-12:    rgba(${theme.palette.darkBackground}, 0.12);\r\n\r\n      $mat-light-theme-background: (\r\n        background:               $light-background,\r\n        status-bar:               $light-bg-darker-20,\r\n        app-bar:                  $light-bg-darker-5,\r\n        hover:                    $dark-bg-alpha-4,\r\n        card:                     $light-bg-lighter-5,\r\n        dialog:                   $light-bg-lighter-5,\r\n        disabled-button:          $dark-bg-alpha-12,\r\n        raised-button:            $light-bg-lighter-5,\r\n        focused-button:           $dark-focused,\r\n        selected-button:          $light-bg-darker-20,\r\n        selected-disabled-button: $light-bg-darker-30,\r\n        disabled-button-toggle:   $light-bg-darker-10,\r\n        unselected-chip:          $light-bg-darker-10,\r\n        disabled-list-option:     $light-bg-darker-10,\r\n      );\r\n\r\n      // Dark bg\r\n      $dark-background:     ${theme.palette.darkBackground};\r\n      $dark-bg-lighter-5:   lighten($dark-background, 5%);\r\n      $dark-bg-lighter-10:  lighten($dark-background, 10%);\r\n      $dark-bg-lighter-20:  lighten($dark-background, 20%);\r\n      $dark-bg-lighter-30:  lighten($dark-background, 30%);\r\n      $light-bg-alpha-4:    rgba(${theme.palette.lightBackground}, 0.04);\r\n      $light-bg-alpha-12:   rgba(${theme.palette.lightBackground}, 0.12);\r\n\r\n      // Background palette for dark themes.\r\n      $mat-dark-theme-background: (\r\n        background:               $dark-background,\r\n        status-bar:               $dark-bg-lighter-20,\r\n        app-bar:                  $dark-bg-lighter-5,\r\n        hover:                    $light-bg-alpha-4,\r\n        card:                     $dark-bg-lighter-5,\r\n        dialog:                   $dark-bg-lighter-5,\r\n        disabled-button:          $light-bg-alpha-12,\r\n        raised-button:            $dark-bg-lighter-5,\r\n        focused-button:           $light-focused,\r\n        selected-button:          $dark-bg-lighter-20,\r\n        selected-disabled-button: $dark-bg-lighter-30,\r\n        disabled-button-toggle:   $dark-bg-lighter-10,\r\n        unselected-chip:          $dark-bg-lighter-20,\r\n        disabled-list-option:     $dark-bg-lighter-10,\r\n      );\r\n\r\n      // Theme Config\r\n      ${['primary', 'accent', 'warn'].map(x => this.getScssPalette(x, theme.palette[x])).join('\\n')};\r\n\r\n      $theme: ${!theme.lightness ? 'mat-dark-theme' : 'mat-light-theme'}($theme-primary, $theme-accent, $theme-warn);\r\n      $altTheme: ${!theme.lightness ? 'mat-light-theme' : 'mat-dark-theme'}($theme-primary, $theme-accent, $theme-warn);\r\n\r\n      // Theme Init\r\n      @include angular-material-theme($theme);\r\n\r\n      .theme-alternate {\r\n        @include angular-material-theme($altTheme);\r\n      }\r\n\r\n      \r\n\r\n\r\n      // Specific component overrides, pieces that are not in line with the general theming\r\n\r\n      // Handle buttons appropriately, with respect to line-height\r\n      .mat-raised-button, .mat-stroked-button, .mat-flat-button {\r\n        padding: 0 1.15em;\r\n        margin: 0 .65em;\r\n        min-width: 3em;\r\n      }\r\n\r\n      .mat-standard-chip {\r\n        padding: .5em .85em;\r\n        min-height: 2.5em;\r\n      }\r\n      `;\r\n\r\n    return template;\r\n    }\r\n\r\n    /**\r\n     * Get the Scss Palatte\r\n     *\r\n     * @param name palette name\r\n     *\r\n     * @param subPalette SubPaletteModel\r\n     */\r\n    protected getScssPalette(name: string, subPalette: SubPaletteModel): string {\r\n      return `\r\n      body {\r\n        --${name}-color: ${subPalette.main};\r\n        --${name}-lighter-color: ${subPalette.lighter};\r\n        --${name}-darker-color: ${subPalette.darker};\r\n        --text-${name}-color: #{${this.getTextColor(subPalette.main)}};\r\n        --text-${name}-lighter-color: #{${this.getTextColor(subPalette.lighter)}};\r\n        --text-${name}-darker-color: #{${this.getTextColor(subPalette.darker)}};\r\n      }\r\n\r\n    $mat-${name}: (\r\n      main: ${subPalette.main},\r\n      lighter: ${subPalette.lighter},\r\n      darker: ${subPalette.darker},\r\n      200: ${subPalette.main}, // For slide toggle,\r\n      contrast : (\r\n        main: ${this.getTextColor(subPalette.main)},\r\n        lighter: ${this.getTextColor(subPalette.lighter)},\r\n        darker: ${this.getTextColor(subPalette.darker)},\r\n      )\r\n    );\r\n    $theme-${name}: mat-palette($mat-${name}, main, lighter, darker);`;\r\n  }\r\n\r\n    /**\r\n     * Get text color\r\n     *\r\n     * @param col color\r\n     */\r\n    protected getTextColor(col: string): string {\r\n      return `$${tinyColor(col).isLight() ? 'dark' : 'light'}-primary-text`;\r\n    }\r\n}\r\n","import { PalettePickerService } from './palette-picker.service';\r\nimport { ColorMapModel } from './../models/color-map.model';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { ThemeBuilderConstants } from '../utils/theme-builder-constants.utils';\r\nimport { MaterialPaletteModel } from './../models/material-palette.model';\r\nimport { Injectable, NgZone } from '@angular/core';\r\nimport * as tinycolor from 'tinycolor2';\r\nimport { PaletteModel } from '../models/palette.model';\r\nimport { ReplaySubject, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ThemeModel } from '../models/theme.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PaletteListModel } from '../models/palette-list.model';\r\nimport { PaletteTemplateService } from './palette-template.service';\r\n\r\nconst tinyColor = tinycolor;\r\n\r\ntype RGBA = tinycolor.ColorFormats.RGBA;\r\n\r\n// tell typescript that Sass exists\r\n// loads the synchronous Sass.js\r\ndeclare var Sass: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ThemeBuilderService {\r\n\r\n  /**\r\n   * Is it lightness\r\n   */\r\n  protected themeMode: boolean;\r\n\r\n  /**\r\n   * Theme Palette\r\n   */\r\n  protected palette: PaletteModel;\r\n\r\n  // public $fonts = new Subject<FontSelectionModel[]>();\r\n  public Theme: Subject<ThemeModel>;\r\n  public PaletteColors: Subject<Partial<PaletteModel>>;\r\n  public ThemeScss: Promise<void>;\r\n  public PaletteList: Array<PaletteListModel>;\r\n\r\n  /**\r\n   * Palette colors, from 50 - A700\r\n   */\r\n  public MaterialPaletteColors: MaterialPaletteModel;\r\n\r\n  constructor(\r\n    protected http: HttpClient, \r\n    protected paletteTemplateService: PaletteTemplateService,\r\n    protected localStorageService: LocalStorageService,\r\n    protected palettePickerService: PalettePickerService,\r\n    protected zone: NgZone,) {\r\n\r\n    this.themeMode = true;\r\n    this.Theme = new Subject<ThemeModel>();\r\n    this.PaletteColors = new Subject<Partial<PaletteModel>>();\r\n    this.ThemeScss = this.loadThemingScss();\r\n\r\n    this.PaletteList = [];\r\n   }\r\n\r\n   /**\r\n    * Set Palette colors\r\n    */\r\n    public set Palette(palette: PaletteModel) {\r\n\r\n      this.palette = palette;\r\n      this.palettePickerService.PalettePickerChange(palette);\r\n\r\n      this.UpdateTheme(this.getTheme());\r\n    }\r\n\r\n    public get Palette() {\r\n      return this.palette;\r\n    }\r\n\r\n    public set ThemeMode(light: boolean) {\r\n      this.themeMode = !light;\r\n      this.UpdateTheme(this.getTheme());\r\n    }\r\n\r\n    public get ThemeMode() {\r\n      return this.themeMode;\r\n    }\r\n\r\n   /**\r\n    * load intial theme\r\n    */\r\n   protected loadThemingScss(): Promise<void> {\r\n\r\n     // this is generated in angular.json, pulls from node_modules/@angular/material\r\n    return this.http.get('/assets/_theming.scss', { responseType: 'text' })\r\n      .pipe(\r\n        map((x: string) => {\r\n          return x\r\n            .replace(/\\n/gm, '??')\r\n            .replace(/\\$mat-([^:?]+)\\s*:\\s*\\([? ]*50:[^()]*contrast\\s*:\\s*\\([^)]+\\)[ ?]*\\);\\s*?/g,\r\n              (all: string, name: string) => name === 'grey' ? all : '')\r\n            .replace(/\\/\\*.*?\\*\\//g, '')\r\n            .split(/[?][?]/g)\r\n            .map((l: string) => l\r\n              .replace(/^\\s*(\\/\\/.*)?$/g, '')\r\n              .replace(/^\\$mat-blue-gray\\s*:\\s*\\$mat-blue-grey\\s*;\\s*/g, '')\r\n              .replace(/^\\s*|\\s*$/g, '')\r\n              .replace(/:\\s\\s+/g, ': ')\r\n            )\r\n            .filter((l: string) => !!l)\r\n            .join('\\n');\r\n        }),\r\n        map((txt: string) =>\r\n          // writeFile allows this file to be accessed from styles.scss\r\n          Sass.writeFile('~@angular/material/theming', txt, (result: boolean) => {\r\n           // console.log('Sass.writeFile', result);\r\n          }))\r\n      ).toPromise();\r\n   }\r\n\r\n  /**\r\n   * Get theme template and update it\r\n   * \r\n   * @param theme current theme\r\n   */\r\n  public GetTemplate(theme: ThemeModel): string {\r\n    return this.paletteTemplateService.GetTemplate(theme);\r\n  }\r\n\r\n  /**\r\n   * Compile SASS to CSS\r\n   *\r\n   * @param theme SASS stylesheet\r\n   * @returns compiled CSS\r\n   */\r\n   public async CompileScssTheme(theme: string) {\r\n    await this.ThemeScss;\r\n    return new Promise<string>((res, rej) => {\r\n      Sass.compile(theme.replace('@include angular-material-theme($altTheme);', ''), (v: any) => {\r\n        if (v.status === 0) {\r\n          res(v.text);\r\n        } else {\r\n          rej(v);\r\n        }\r\n      });\r\n    }\r\n    );\r\n   }\r\n\r\n   /**\r\n    * Return primary and accent colors for each color map, from colors 50 - A700\r\n    *\r\n    * @param color color\r\n    */\r\n   public GetPalette(color: string): MaterialPaletteModel {\r\n    const baseLight = tinyColor('#ffffff');\r\n    const baseDark = this.multiply(tinyColor(color).toRgb(), tinyColor(color).toRgb());\r\n    const [, , , baseTriad] = tinyColor(color).tetrad();\r\n\r\n    const primary = Object.keys(ThemeBuilderConstants.MIX_AMOUNTS_PRIMARY)\r\n      .map(k => {\r\n        const [light, amount] = ThemeBuilderConstants.MIX_AMOUNTS_PRIMARY[k];\r\n        return [k, tinyColor.mix(light ? baseLight : baseDark,\r\n          tinyColor(color), amount)] as [string, tinycolor.Instance];\r\n      });\r\n\r\n    const accent = Object.keys(ThemeBuilderConstants.MIX_AMOUNTS_SECONDARY)\r\n      .map(k => {\r\n        const [amount, sat, light] = ThemeBuilderConstants.MIX_AMOUNTS_SECONDARY[k];\r\n        return [k, tinyColor.mix(baseDark, baseTriad, amount)\r\n          .saturate(sat).lighten(light)] as [string, tinycolor.Instance];\r\n      });\r\n\r\n    return [...primary, ...accent].reduce((acc, [k, c]) => {\r\n      acc[k] = c.toHexString();\r\n      return acc;\r\n    }, {});\r\n   }\r\n\r\n   /**\r\n    * emit event with theme\r\n    */\r\n   protected emit(): void {\r\n     this.Theme.next(this.getTheme());\r\n   }\r\n\r\n   /**\r\n    * Return a new theme model\r\n    */\r\n   public getTheme(): ThemeModel {\r\n\r\n    return {\r\n      palette: this.Palette,\r\n      lightness: this.ThemeMode,\r\n    };\r\n   }\r\n\r\n   public multiply(rgb1: RGBA, rgb2: RGBA): any {\r\n    rgb1.b = Math.floor(rgb1.b * rgb2.b / 255);\r\n    rgb1.g = Math.floor(rgb1.g * rgb2.g / 255);\r\n    rgb1.r = Math.floor(rgb1.r * rgb2.r / 255);\r\n\r\n    return tinyColor('rgb ' + rgb1.r + ' ' + rgb1.g + ' ' + rgb1.b);\r\n   }\r\n\r\n   public UpdateTheme(theme: ThemeModel): void {\r\n\r\n    // SASS stylesheet\r\n    const source: string = this.GetTemplate(theme);\r\n\r\n    // Running functions outside of Angular's zone and do work that\r\n    // doesn't trigger Angular change-detection.\r\n   this.zone.runOutsideAngular(() => {\r\n\r\n     this.CompileScssTheme(source).then( (text: string) => {\r\n\r\n        // SASS compiled to CSS\r\n        const compiledDynamicCSS: string = text;\r\n\r\n        const dynamicStyleSheet: HTMLElement = document.getElementById('theme-builder-stylesheet');\r\n\r\n        // check if dynamic stylesheet exists, then remove it\r\n        if (dynamicStyleSheet) {\r\n          document.getElementsByTagName('body')[0].removeChild(dynamicStyleSheet);\r\n        }\r\n\r\n        // add dynamic stylesheet\r\n        const style = document.createElement('style');\r\n              style.id = 'theme-builder-stylesheet';\r\n              style.appendChild(document.createTextNode(compiledDynamicCSS));\r\n\r\n        document.getElementsByTagName('body')[0].appendChild(style);\r\n\r\n      }).catch((err: Error) => {\r\n        console.error(err);\r\n      });\r\n   });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lcu-theme-builder',\r\n  templateUrl: './theme-builder.component.html',\r\n  styleUrls: ['./theme-builder.component.scss']\r\n})\r\n\r\nexport class ThemeBuilderComponent implements OnInit  {\r\n\r\n  constructor()\r\n  {\r\n\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","import { Directive, OnInit, ElementRef, HostListener, Renderer2 } from '@angular/core';\r\nimport { ThemeColorPickerService } from '@lcu/common';\r\n\r\n@Directive({\r\n  selector: '[theme-builder]'\r\n})\r\nexport class ThemeBuilderDirective implements OnInit {\r\n\r\n  private currentColor: string;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private themeService: ThemeColorPickerService\r\n  ) { }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    this.hoverEffect(this.getThemeColor(), 'underline');\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.hoverEffect('', 'initial');\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.currentColor = this.getThemeColor();\r\n  }\r\n\r\n  private getThemeColor(): string {\r\n  \r\n    const theme = this.themeService.GetColorClass().value;\r\n    return 'color-swatch-' + theme.substring(theme.indexOf('-') + 1, theme.lastIndexOf('-'));\r\n  }\r\n\r\n  private hoverEffect(color: string, decoration: string): void {\r\n    const title = this.elRef.nativeElement.querySelector('.mat-card-title');\r\n    this.renderer.setStyle(title, 'text-decoration', decoration);\r\n\r\n    if (!color && this.currentColor) {\r\n      this.renderer.removeClass(title, this.currentColor);\r\n    } else if (color !== this.currentColor) {\r\n      this.renderer.removeClass(title, this.currentColor);\r\n    }\r\n\r\n    if (color) {\r\n      this.renderer.addClass(title, color);\r\n      this.currentColor = color;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport * as tinycolor from 'tinycolor2';\r\nimport { FormControl } from '@angular/forms';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { PalettePickerService } from '../../services/palette-picker.service';\r\n// import * as EventEmitter from 'events';\r\n\r\nconst tinyColor = tinycolor;\r\n\r\n@Component({\r\n  selector: 'lcu-color-picker',\r\n  templateUrl: './color-picker.component.html',\r\n  styleUrls: ['./color-picker.component.scss']\r\n})\r\nexport class ColorPickerComponent implements OnInit {\r\n\r\n  /**\r\n   * Toggle backdrop when color picker is open\r\n   */\r\n  public ShowBackdrop: boolean;\r\n\r\n  /**\r\n   * Parent control from using component\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('control')\r\n  public Control: FormControl;\r\n\r\n  /**\r\n   * Disable color picker\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('disabled')\r\n  public Disabled: boolean;\r\n\r\n  /**\r\n   * Array of preset colors, shown in color picker\r\n   */\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('variants')\r\n  public Variants?: string[];\r\n\r\n  constructor(protected palettePickerService: PalettePickerService) {\r\n\r\n    this.ShowBackdrop = false;\r\n  }\r\n\r\n  /**\r\n   * Set the selected color\r\n   */\r\n  @Input('color')\r\n  public set Color(col: string) {\r\n\r\n    this.Control.setValue(col);\r\n  }\r\n\r\n  /**\r\n   * Get the selected color\r\n   *\r\n   */\r\n  public get Color() {\r\n    return this.Control.value;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * Turn backdrop on\r\n   *\r\n   * @param on toggle\r\n   */\r\n  public SetBackdrop(on: boolean): void {\r\n\r\n    this.ShowBackdrop = on;\r\n  }\r\n\r\n  /**\r\n   * Set font color to contrast background color of display\r\n   *\r\n   * @param col color\r\n   */\r\n  public GetTextColor(col: string): any {\r\n\r\n    return tinyColor(col).isLight() ? '#000' : '#fff';\r\n  }\r\n\r\n  public ColorPickerClosed(evt: string): void {\r\n\r\n    this.palettePickerService.CloseColorPicker(evt);\r\n  }\r\n\r\n  public ColorPickerChange(evt: string): void {\r\n\r\n    this.Color = evt;\r\n  }\r\n\r\n}\r\n","import { ThemeBuilderConstants } from '../../utils/theme-builder-constants.utils';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AbstractControl, FormGroup, FormControl } from '@angular/forms';\r\nimport { ThemeBuilderService } from '../../services/theme-builder.service';\r\nimport { PaletteModel } from '../../models/palette.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { PalettePickerService } from '../../services/palette-picker.service';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'lcu-palette-picker',\r\n  templateUrl: './palette-picker.component.html',\r\n  styleUrls: ['./palette-picker.component.scss']\r\n})\r\nexport class PalettePickerComponent implements OnInit, OnDestroy {\r\n\r\n  public Form: FormGroup;\r\n\r\n  protected colorPickerClosedSubscription: Subscription;\r\n\r\n  protected formSubscription: Subscription;\r\n\r\n  public PrimaryColor: string;\r\n  public AccentColor: string;\r\n  public WarnColor: string;\r\n\r\n  /**\r\n   * Access Primary form group\r\n   */\r\n  public get Primary(): AbstractControl {\r\n    return this.Form.get('primary');\r\n  }\r\n\r\n  /**\r\n   * Access Accent form group\r\n   */\r\n  public get Accent(): AbstractControl {\r\n    return this.Form.get('accent');\r\n  }\r\n\r\n  /**\r\n   * Access Warn form group\r\n   */\r\n  public get Warn(): AbstractControl {\r\n    return this.Form.get('warn');\r\n  }\r\n\r\n  protected palettePickerChangedSubscription: Subscription;\r\n\r\n  constructor(protected themeBuilderService: ThemeBuilderService,\r\n              protected palettePickerService: PalettePickerService) {\r\n\r\n    this.setupForm();\r\n\r\n    this.colorPickerClosedSubscription = this.palettePickerService.ColorPickerClosed\r\n    .subscribe((val: string) => {\r\n      this.updatePalette();\r\n    });\r\n\r\n    // Update base colors of the color picker on change\r\n    // when manually setting colors, not using\r\n    // the color picker itself\r\n    this.palettePickerService.ColorPickerChanged\r\n    .subscribe((val: PaletteModel) => {\r\n\r\n      this.PrimaryColor = val.primary.main;\r\n      this.AccentColor = val.accent.main;\r\n      this.WarnColor = val.warn.main;\r\n      // this.Primary.setValue(val.primary.main);\r\n      // this.Accent.setValue(val.accent.main);\r\n      // this.Warn.setValue(val.warn.main);\r\n    });\r\n  }\r\n\r\n  protected updatePalette(): void {\r\n\r\n    let palette: PaletteModel = new PaletteModel();\r\n    palette = { ...this.palettePickerService.CurrentPalette, ...palette };\r\n    palette.primary.main = this.Primary.value.main;\r\n    palette.accent.main = this.Accent.value.main;\r\n    palette.warn.main = this.Warn.value.main;\r\n\r\n    this.themeBuilderService.Palette = palette;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    // setting initial values,\r\n   // this isn't the right way to do this, but for the moment - shannon\r\n    this.patchValue(ThemeBuilderConstants.InitialValues, true);\r\n\r\n   this.Form.valueChanges\r\n   .pipe(distinctUntilChanged((a: PaletteModel, b: PaletteModel) => {\r\n    //  console.log('A', a);\r\n    //  console.log('B', b);\r\n     return JSON.stringify(a) !== JSON.stringify(b);\r\n   }))\r\n    .subscribe((palette: PaletteModel) => {\r\n      console.log('ASKASLKDALKSD', palette);\r\n      this.themeBuilderService.Palette = palette;\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n\r\n    this.formSubscription.unsubscribe();\r\n    this.colorPickerClosedSubscription.unsubscribe();\r\n  }\r\n\r\n  protected patchValue(val: PaletteModel | any, emitValue: boolean): void {\r\n    this.Form.patchValue(val, {emitEvent: emitValue});\r\n  }\r\n\r\n  /**\r\n   * Setup the form\r\n   */\r\n  protected setupForm(): void {\r\n    this.Form = new FormGroup({\r\n      primary: new FormGroup({\r\n        main: new FormControl(''),\r\n        lighter: new FormControl(''),\r\n        darker: new FormControl('')\r\n      }, {updateOn: 'change'}),\r\n      accent: new FormGroup({\r\n        main: new FormControl(''),\r\n        lighter: new FormControl(''),\r\n        darker: new FormControl('')\r\n      }),\r\n      warn: new FormGroup({\r\n        main: new FormControl(''),\r\n        lighter: new FormControl(''),\r\n        darker: new FormControl('')\r\n      }, {updateOn: 'change'}),\r\n      lightText: new FormControl('', []),\r\n      lightBackground: new FormControl('', []),\r\n      darkText: new FormControl('', []),\r\n      darkBackground: new FormControl('', [])\r\n    }, {updateOn: 'change'});\r\n  }\r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { FormGroup, AbstractControl, FormControl } from '@angular/forms';\r\n\r\nimport { ThemeBuilderService } from '../../services/theme-builder.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { PalettePickerService } from '../../services/palette-picker.service';\r\nimport { PaletteModel } from '../../models/palette.model';\r\nimport { ThemeBuilderConstants } from '../../utils/theme-builder-constants.utils';\r\n\r\n@Component({\r\n  selector: 'lcu-sub-palette-picker',\r\n  templateUrl: './sub-palette-picker.component.html',\r\n  styleUrls: ['./sub-palette-picker.component.scss']\r\n})\r\nexport class SubPalettePickerComponent implements OnInit, OnDestroy {\r\n\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('form')\r\n  public Form: FormGroup;\r\n\r\n  @Input('color-picker-color')\r\n  public set ColorPickerColor(val: string) {\r\n    this.Main.setValue(val);\r\n    this.onMainChange();\r\n  }\r\n\r\n  /**\r\n   * Access Main color form control\r\n   */\r\n  public get Main(): AbstractControl {\r\n    return this.Form.get('main');\r\n  }\r\n\r\n  /**\r\n   * Access Light color form control\r\n   */\r\n  public get Lighter(): AbstractControl {\r\n    return this.Form.get('lighter');\r\n  }\r\n\r\n  /**\r\n   * Access Dark color form control\r\n   */\r\n  public get Darker(): AbstractControl {\r\n    return this.Form.get('darker');\r\n  }\r\n\r\n  protected colorPickerClosedSubscription: Subscription;\r\n\r\n  /**\r\n   * Toggle control for light and dark colors\r\n   */\r\n  public Unlocked: FormControl;\r\n\r\n  /**\r\n   * Set preset color palette\r\n   */\r\n  public get Variants(): Array<{ key: string; hex: string; isLight: boolean; }> {\r\n\r\n    return !this.themeBuilderService.MaterialPaletteColors ? undefined :\r\n            this.materialKeys.map((x: string) =>\r\n            {\r\n              return this.themeBuilderService.MaterialPaletteColors[x]\r\n            });\r\n  }\r\n\r\n  protected palettePickerChangedSubscription: Subscription;\r\n\r\n  /**\r\n   * Keys for palette colors, 50 - A700\r\n   */\r\n  protected materialKeys: Array<string>;\r\n\r\n  constructor(protected themeBuilderService: ThemeBuilderService,\r\n    protected palettePickerService: PalettePickerService) {\r\n    this.Unlocked = new FormControl(false);\r\n    this.materialKeys = [...Object.keys(ThemeBuilderConstants.MIX_AMOUNTS_PRIMARY),\r\n                         ...Object.keys(ThemeBuilderConstants.MIX_AMOUNTS_SECONDARY)];\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    if (this.Main.value) {\r\n     this.onMainChange();\r\n    }\r\n\r\n    this.colorPickerClosedSubscription = this.palettePickerService.ColorPickerClosed\r\n    .subscribe((val: string) => {\r\n      this.onMainChange();\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n\r\n    this.palettePickerChangedSubscription.unsubscribe();\r\n    this.colorPickerClosedSubscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Returns palette colors, 50 - A700\r\n   *\r\n   * @param color selected base color, chosen from color pickers\r\n   */\r\n  protected onMainChange(): void {\r\n\r\n    this.themeBuilderService.MaterialPaletteColors = this.themeBuilderService.GetPalette(this.Form.value.main);\r\n\r\n    // set lightest and darkest hue colors in color picker\r\n    if (!this.Unlocked.value) {\r\n      this.Form.patchValue({ lighter: this.themeBuilderService.MaterialPaletteColors['50'] });\r\n      this.Form.patchValue({ darker: this.themeBuilderService.MaterialPaletteColors['900'] });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\nimport { ThemeBuilderService } from '../../services/theme-builder.service';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\n/**\r\n * String literal data type\r\n */\r\ntype ModeType = 'dark' | 'light';\r\n\r\n@Component({\r\n  selector: 'lcu-mode-toggle',\r\n  templateUrl: './mode-toggle.component.html',\r\n  styleUrls: ['./mode-toggle.component.scss']\r\n})\r\nexport class LightnessPickerComponent implements OnInit {\r\n\r\n  /**\r\n   * Access Toggle field within the form group\r\n   */\r\n   public get Toggle(): AbstractControl {\r\n    return this.ToggleForm.get('toggle');\r\n  }\r\n\r\n  public ToggleForm: FormGroup;\r\n\r\n  public ToggleMode: string;\r\n\r\n  constructor(protected themeBuilderService: ThemeBuilderService) { \r\n    this.ToggleMode = 'Dark Mode';\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n\r\n    this.formSetup();\r\n  }\r\n\r\n    protected formSetup(): void {\r\n\r\n      this.ToggleForm = new FormGroup({\r\n        toggle: new FormControl(false)\r\n      })\r\n\r\n      this.onChanges();\r\n    }\r\n\r\n    protected onChanges(): void {\r\n      this.Toggle.valueChanges\r\n      .subscribe((val: boolean) => {\r\n        this.ToggleMode = val ? 'Light Mode' : 'Dark Mode';\r\n        this.themeBuilderService.ThemeMode = val;\r\n      });\r\n    }\r\n  }\r\n","\r\nimport { PalettePickerService } from '../../services/palette-picker.service';\r\nimport { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { FormGroup, AbstractControl, FormControl, Validators } from '@angular/forms';\r\nimport * as tinycolor from 'tinycolor2';\r\nimport { PaletteTemplateService } from '../../services/palette-template.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { PaletteModel } from '../../models/palette.model';\r\nimport { PaletteColorMapModel } from '../../models/palette-color-map.model';\r\nimport { MaterialPaletteModel } from '../../models/material-palette.model';\r\nimport { ThemeBuilderService } from '../../services/theme-builder.service';\r\nimport { ColorModel } from '../../models/color.model';\r\n\r\nconst tinyColor = tinycolor;\r\n// const styleVariables = require('./assets/styles/dynamic-theme.scss');\r\n\r\n/**\r\n * String literal data type\r\n */\r\ntype ModeType = 'dark' | 'light';\r\n\r\n@Component({\r\n  selector: 'lcu-variant-colors',\r\n  templateUrl: './variant-colors.component.html',\r\n  styleUrls: ['./variant-colors.component.scss']\r\n})\r\n\r\nexport class VariantColorsComponent implements OnInit, OnDestroy {\r\n\r\n  private _accentColor: string;\r\n  private _primaryColor: string;\r\n  private _warnColor: string;\r\n\r\n// tslint:disable-next-line:no-input-rename\r\n@Input('accent-color')\r\nset AccentColor(val: string) {\r\n  this._accentColor = val;\r\n  this.updateAccentColor(val);\r\n}\r\n\r\nget AccentColor(): string {\r\n  return this._accentColor;\r\n}\r\n\r\n// tslint:disable-next-line:no-input-rename\r\n@Input('primary-color')\r\nset PrimaryColor(val: string) {\r\n  this._primaryColor = val;\r\n  this.updatePrimaryColor(val);\r\n}\r\n\r\nget PrimaryColor(): string {\r\n  return this.PrimaryColor;\r\n}\r\n\r\n// tslint:disable-next-line:no-input-rename\r\n@Input('warn-color')\r\nset WarnColor(val: string) {\r\n  this._warnColor = val;\r\n  this.updateWarnColor(val);\r\n}\r\n\r\nget WarnColor(): string {\r\n  return this.WarnColor;\r\n}\r\n\r\n/**\r\n * Access primary color field\r\n */\r\npublic get PrimaryColorControl(): AbstractControl {\r\n  return this.Form.get('primaryColorControl');\r\n}\r\n\r\n/**\r\n * Access accent color field\r\n */\r\npublic get AccentColorControl(): AbstractControl {\r\n  return this.Form.get('accentColorControl');\r\n}\r\n\r\n/**\r\n * property for reactive form\r\n */\r\npublic Form: FormGroup;\r\n\r\nprotected paletteChangedSubscription: Subscription;\r\n\r\n  constructor(\r\n    public PalettePickerService: PalettePickerService,\r\n    protected themeBuilderService: ThemeBuilderService) {\r\n    this.PalettePickerService.PrimaryColorPalette = [];\r\n    this.PalettePickerService.AccentColorPalette = [];\r\n    this.PalettePickerService.WarnColorPalette = [];\r\n  }\r\n\r\n public ngOnInit(): void {\r\n    this.setupForm();\r\n\r\n    this.paletteChangedSubscription = this.PalettePickerService.ColorPickerChanged\r\n    .subscribe((palette: PaletteModel) => {\r\n\r\n      if (!palette || !palette.primary) {\r\n        return;\r\n      }\r\n\r\n      this.updateAccentColor(palette.accent.main);\r\n      this.updatePrimaryColor(palette.primary.main);\r\n      this.updateWarnColor(palette.warn.main);\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.paletteChangedSubscription.unsubscribe();\r\n  }\r\n\r\n  protected updatePrimaryColor(color: string): void {\r\n    this.PalettePickerService.PrimaryColorPalette = this.computeColors(color ? color : this.PrimaryColorControl.value);\r\n\r\n    for (const c of this.PalettePickerService.PrimaryColorPalette) {\r\n      const key = `--theme-primary-${c.name}`;\r\n      const value = c.hex;\r\n      const key2 = `--theme-primary-contrast-${c.name}`;\r\n      const value2 = c.darkContrast ? 'rgba(black, 0.87)' : 'white';\r\n\r\n      // set or update CSS variable values\r\n      document.documentElement.style.setProperty(key, value);\r\n      document.documentElement.style.setProperty(key2, value2);\r\n    }\r\n  }\r\n\r\n  protected updateAccentColor(color: string): void {\r\n    this.PalettePickerService.AccentColorPalette = this.computeColors(color ? color : this.AccentColorControl.value);\r\n\r\n    for (const c of this.PalettePickerService.AccentColorPalette) {\r\n      const key = `--theme-accent-${c.name}`;\r\n      const value = c.hex;\r\n      const key2 = `--theme-primary-contrast-${c.name}`;\r\n      const value2 = c.darkContrast ? 'rgba(black, 0.87)' : 'white';\r\n      document.documentElement.style.setProperty(key, value);\r\n      document.documentElement.style.setProperty(key2, value2);\r\n    }\r\n  }\r\n\r\n  protected updateWarnColor(color: string): void {\r\n    this.PalettePickerService.WarnColorPalette = this.computeColors(color);\r\n\r\n    for (const c of this.PalettePickerService.WarnColorPalette) {\r\n      const key = `--theme-warn-${c.name}`;\r\n      const value = c.hex;\r\n      const key2 = `--theme-primary-contrast-${c.name}`;\r\n      const value2 = c.darkContrast ? 'rgba(black, 0.87)' : 'white';\r\n      document.documentElement.style.setProperty(key, value);\r\n      document.documentElement.style.setProperty(key2, value2);\r\n    }\r\n  }\r\n\r\n  protected setupForm(): void {\r\n    this.Form = new FormGroup({\r\n      primaryColorControl: new FormControl('#ffcc11'),\r\n      accentColorControl: new FormControl('#0000aa')\r\n    });\r\n  }\r\n\r\n  protected computeColors(color: string): Array<ColorModel> {\r\n\r\n    const baseLightColor = tinyColor('#ffffff');\r\n    const baseDarkColor = this.themeBuilderService.multiply(tinyColor(color).toRgb(), tinyColor(color).toRgb());\r\n    const [, , , baseTetrad] = tinyColor(color).tetrad();\r\n\r\n    return [\r\n      this.getColorObject(tinyColor.mix(baseLightColor, tinyColor(color), 12), '50'),\r\n      this.getColorObject(tinyColor.mix(baseLightColor, tinyColor(color), 30), '100'),\r\n      this.getColorObject(tinyColor.mix(baseLightColor, tinyColor(color), 50), '200'),\r\n      this.getColorObject(tinyColor.mix(baseLightColor, tinyColor(color), 70), '300'),\r\n      this.getColorObject(tinyColor.mix(baseLightColor, tinyColor(color), 85), '400'),\r\n      this.getColorObject(tinyColor(color), '500'),\r\n      this.getColorObject(tinyColor.mix(baseDarkColor, tinyColor(color), 87), '600'),\r\n      this.getColorObject(tinyColor.mix(baseDarkColor, tinyColor(color), 70), '700'),\r\n      this.getColorObject(tinyColor.mix(baseDarkColor, tinyColor(color), 54), '800'),\r\n      this.getColorObject(tinyColor.mix(baseDarkColor, tinyColor(color), 25), '900'),\r\n      this.getColorObject(tinyColor.mix(baseDarkColor, baseTetrad, 15).saturate(80).lighten(65), 'A100'),\r\n      this.getColorObject(tinyColor.mix(baseDarkColor, baseTetrad, 15).saturate(80).lighten(55), 'A200'),\r\n      this.getColorObject(tinyColor.mix(baseDarkColor, baseTetrad, 15).saturate(100).lighten(45), 'A400'),\r\n      this.getColorObject(tinyColor.mix(baseDarkColor, baseTetrad, 15).saturate(100).lighten(40), 'A700')\r\n    ];\r\n  }\r\n// force change\r\n  protected getColorObject(value: tinycolor.Instance, name: string): ColorModel {\r\n    const c = tinyColor(value);\r\n    return {\r\n      name,\r\n      hex: c.toHexString(),\r\n      darkContrast: c.isLight()\r\n    };\r\n  }\r\n}\r\n","export class ThemePickerModel {\r\n\r\n    public Accent: string;\r\n    public ID: string;\r\n    public Primary: string;\r\n    public Warn: string;\r\n\r\n    constructor(opts: ThemePickerModel) {\r\n        Object.assign(this, opts); // destructure values\r\n    }\r\n}","import { ThemeBuilderConstants } from './../../utils/theme-builder-constants.utils';\r\nimport { PalettePickerService } from './../../services/palette-picker.service';\r\nimport { ThemePickerModel } from './../../models/theme-picker.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { PaletteModel } from '../../models/palette.model';\r\nimport { ThemeBuilderService } from '../../services/theme-builder.service';\r\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'lcu-theme-picker',\r\n  templateUrl: './theme-picker.component.html',\r\n  styleUrls: ['./theme-picker.component.scss']\r\n})\r\nexport class ThemePickerComponent implements OnInit {\r\n\r\n  /**\r\n   * property for reactive form\r\n   */\r\n  public ManualForm: FormGroup;\r\n\r\n\r\n/**\r\n * Access manual accent color field\r\n */\r\npublic get ManualAccent(): AbstractControl {\r\n  return this.ManualForm.get('manualAccent');\r\n}\r\n\r\n/**\r\n * Access manual primary color field\r\n */\r\n public get ManualPrimary(): AbstractControl {\r\n  return this.ManualForm.get('manualPrimary');\r\n}\r\n\r\n/**\r\n * Access manual theme name field\r\n */\r\npublic get ManualThemeName(): AbstractControl {\r\n  return this.ManualForm.get('manualThemeName');\r\n}\r\n\r\n/**\r\n * Access manual warn color field\r\n */\r\npublic get ManualWarn(): AbstractControl {\r\n  return this.ManualForm.get('manualWarn');\r\n}\r\n\r\n\r\n  public Themes: Array<ThemePickerModel>;\r\n\r\n  constructor(\r\n    protected palettePickerService: PalettePickerService,\r\n    protected themeBuilderService: ThemeBuilderService) {\r\n\r\n      this.setupForm();\r\n      this.themes();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public SetActiveTheme(theme: ThemePickerModel): void {\r\n    let palette: PaletteModel = new PaletteModel();\r\n    palette = { ...this.palettePickerService.CurrentPalette, ...palette };\r\n\r\n    palette.primary.main = theme.Primary;\r\n    palette.accent.main = theme.Accent;\r\n    palette.warn.main = theme.Warn;\r\n\r\n  // this.palettePickerService.PalettePickerChange(palette);\r\n\r\n  this.themeBuilderService.Palette = palette;\r\n  }\r\n\r\n  /**\r\n   * Manually create theme, by using inputs\r\n   */\r\n  public SetManualTheme(): void {\r\n    let manualPalette: ThemePickerModel;\r\n    manualPalette = new ThemePickerModel(\r\n      {\r\n        ID: this.ManualThemeName.value,\r\n        Primary: this.ManualPrimary.value,\r\n        Accent: this.ManualAccent.value,\r\n        Warn: this.ManualWarn.value\r\n      }\r\n    )\r\n    this.Themes.unshift(manualPalette);\r\n    this.SetActiveTheme(manualPalette);\r\n  }\r\n\r\n  protected setupForm(): void {\r\n\r\n    this.ManualForm = new FormGroup({\r\n      manualThemeName: new FormControl('', {validators: Validators.required}),\r\n      manualPrimary: new FormControl(\r\n        '',\r\n        {validators: Validators.required}),\r\n      manualAccent: new FormControl(\r\n        '',\r\n        {validators: Validators.required}),\r\n      manualWarn: new FormControl(\r\n        '',\r\n        {validators: Validators.required})\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create themes for theme picker\r\n   */\r\n  protected themes(): void {\r\n    this.Themes = [\r\n      new ThemePickerModel(\r\n        {\r\n          ID: 'Fathym Brand',\r\n          Primary: ThemeBuilderConstants.document.getPropertyValue('--initial-primary'),\r\n          Accent: ThemeBuilderConstants.document.getPropertyValue('--initial-accent'),\r\n          Warn: ThemeBuilderConstants.document.getPropertyValue('--initial-warn')\r\n        }\r\n      ),\r\n      new ThemePickerModel(\r\n        {\r\n          ID: 'Yellow', \r\n          Primary: '#ffcc11', \r\n          Accent: '#06a5ff', \r\n          Warn: '#990000'\r\n        }\r\n      ),\r\n      new ThemePickerModel(\r\n        {\r\n          ID: 'Pink', \r\n          Primary: '#a83271', \r\n          Accent: '#6103ff', \r\n          Warn: '#b9f013'\r\n        }\r\n      )\r\n    ];\r\n  }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FathymSharedModule, MaterialModule } from '@lcu/common';\r\n\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\nimport { ThemeBuilderService } from './services/theme-builder.service';\r\nimport { ThemeBuilderComponent } from './controls/theme-builder/theme-builder.component';\r\nimport { ThemeBuilderDirective } from './directives/theme-builder.directive';\r\nimport { ColorPickerComponent } from './controls/color-picker/color-picker.component';\r\nimport { PalettePickerComponent } from './controls/palette-picker/palette-picker.component';\r\nimport { SubPalettePickerComponent } from './controls/sub-palette-picker/sub-palette-picker.component';\r\nimport { LightnessPickerComponent } from './controls/mode-toggle/mode-toggle.component';\r\nimport { VariantColorsComponent } from './controls/variant-colors/variant-colors.component';\r\nimport { ThemePickerComponent } from './controls/theme-picker/theme-picker.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ThemeBuilderComponent,\r\n    ThemeBuilderDirective,\r\n    ColorPickerComponent,\r\n    PalettePickerComponent,\r\n    SubPalettePickerComponent,\r\n    LightnessPickerComponent,\r\n    VariantColorsComponent,\r\n    ThemePickerComponent],\r\n  imports: [\r\n    FathymSharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MaterialModule,\r\n    ColorPickerModule\r\n  ],\r\n  exports: [ThemeBuilderComponent, ThemeBuilderDirective, ThemePickerComponent],\r\n  entryComponents: [\r\n    ThemePickerComponent\r\n  ]\r\n})\r\nexport class ThemeBuilderModule {\r\n  static forRoot(): ModuleWithProviders<ThemeBuilderModule> {\r\n    return {\r\n      ngModule: ThemeBuilderModule,\r\n      providers: [ThemeBuilderService]\r\n    };\r\n  }\r\n}\r\n","export class ThemeBuilderModel {\r\n    public ThemeBuilderId: number;\r\n    public Content: string;\r\n    public Icon: string;\r\n    public Loading?: boolean;\r\n    public Subtitle: string;\r\n    public Title: string;\r\n    public Url?: string;\r\n}\r\n","export class SubPaletteModel {\r\n    public darker: string;\r\n    public lighter: string;\r\n    public main: string;\r\n}\r\n","import { PaletteModel } from './palette.model';\r\n\r\nexport class ThemeModel {\r\n    public lightness: boolean;\r\n    public palette: PaletteModel;\r\n}\r\n","export class ColorModel {\r\n    public name: string;\r\n    public hex: string;\r\n    public darkContrast: boolean;\r\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './lcu.api';\n\nexport {ColorPickerComponent as ɵa} from './lib/controls/color-picker/color-picker.component';\nexport {LightnessPickerComponent as ɵf} from './lib/controls/mode-toggle/mode-toggle.component';\nexport {PalettePickerComponent as ɵb} from './lib/controls/palette-picker/palette-picker.component';\nexport {SubPalettePickerComponent as ɵe} from './lib/controls/sub-palette-picker/sub-palette-picker.component';\nexport {ThemePickerComponent as ɵh} from './lib/controls/theme-picker/theme-picker.component';\nexport {VariantColorsComponent as ɵg} from './lib/controls/variant-colors/variant-colors.component';\nexport {LocalStorageService as ɵd} from './lib/services/local-storage.service';\nexport {PaletteTemplateService as ɵc} from './lib/services/palette-template.service';","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lcu-builder',\r\n  templateUrl: './builder.component.html',\r\n  styleUrls: ['./builder.component.scss']\r\n})\r\nexport class BuilderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","<div \r\nfxLayout='column'\r\n  style=\"height: 100%\">\r\n    <mat-toolbar color=\"primary\" class=\"theme-builder-toolbar\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\" >\r\n      <!-- <div class=\"toolbar-title\" fxLayout=\"row\">\r\n        <a fxFlex class=\"title-text\" routerLink=\"/home\">\r\n          <h1>{{ Title }}</h1>\r\n          <small class=\"subtitle\">Generated by the LCU-CLI</small>\r\n        </a>\r\n      </div> -->\r\n      <h1 class=\"title-text\">{{ Title }}</h1>\r\n      <lcu-theme-picker></lcu-theme-picker>\r\n    </mat-toolbar>\r\n  <div class=\"theme-builder-content mat-drawer-container\">\r\n   \r\n    <div \r\n      fxLayout=\"column\" \r\n      fxLayoutGap=\"10px\">\r\n      <router-outlet></router-outlet>\r\n     \r\n      <div \r\n        fxLayout=\"row\"\r\n        fxLayoutGap=\"10px\">\r\n      <div \r\n        fxFlex=\"40\"\r\n        class=\"primary-color padding-5\" \r\n        fxLayoutAlign=\"center center\">\r\n        <button mat-raised-button color=\"primary\">Primary</button>\r\n      </div>\r\n      <div \r\n        fxFlex=\"40\"\r\n        class=\"accent-color padding-5\"\r\n        fxLayoutAlign=\"center center\">\r\n        <button mat-raised-button color=\"accent\">accent</button>\r\n      </div>\r\n      <div \r\n        fxFlex=\"40\"\r\n        class=\"warn-color padding-5\"\r\n        fxLayoutAlign=\"center center\">\r\n        <button mat-raised-button color=\"warn\">Warn</button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","\r\n<div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n  <!-- <lcu-mode-toggle></lcu-mode-toggle> -->\r\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n      <mat-toolbar color=\"primary\">\r\n        <span class=\"primary-color\">Primary Colors</span>\r\n      </mat-toolbar>\r\n      <mat-toolbar color=\"accent\">\r\n        <span class=\"accent-color\">Accent Colors</span>\r\n      </mat-toolbar>\r\n      <mat-toolbar color=\"warn\">\r\n        <span class=\"warn-color\">Warn Colors</span>\r\n      </mat-toolbar>\r\n  </div>\r\n  <lcu-palette-picker></lcu-palette-picker>\r\n</div>\r\n","<div class=\"backdrop\" *ngIf=\"ShowBackdrop\"></div>\r\n\r\n<input \r\n  type=\"text\" \r\n  [disabled]=\"Disabled\" \r\n  [colorPicker]=\"Color\" \r\n  (colorPickerOpen)=\"SetBackdrop(true)\"\r\n  [cpPresetColors]=\"Variants\" \r\n  [cpPosition]=\"'bottom-left'\"\r\n  (colorPickerClose)=\"SetBackdrop(false); ColorPickerClosed($event)\" \r\n  [cpOutputFormat]=\"'hex'\"\r\n  [cpAlphaChannel]=\"'disabled'\" \r\n  (colorPickerChange)=\"ColorPickerChange($event)\" \r\n  [value]=\"Color\"\r\n  [style.background]=\"Color\" \r\n  [style.color]=\"GetTextColor(Color)\"\r\n>\r\n","<div \r\n  fxLayout=\"column\" \r\n  fxLayoutGap=\"10px\">\r\n  <div \r\n    fxLayout.lg=\"row\" \r\n    fxLayout.md=\"row\" \r\n    fxLayout.sm=\"column\" \r\n    fxLayout.xs=\"column\"\r\n    fxLayoutGap=\"10px\">\r\n    <lcu-sub-palette-picker [color-picker-color]=\"PrimaryColor\" [form]=\"Primary\"></lcu-sub-palette-picker>\r\n    <lcu-sub-palette-picker [color-picker-color]=\"AccentColor\" [form]=\"Accent\"></lcu-sub-palette-picker>\r\n    <lcu-sub-palette-picker [color-picker-color]=\"WarnColor\" [form]=\"Warn\"></lcu-sub-palette-picker>\r\n  </div>\r\n  <lcu-variant-colors></lcu-variant-colors>\r\n</div>\r\n","\r\n<div fxLayout=\"column\">\r\n    <!--Main Color-->\r\n    <lcu-color-picker\r\n      class=\"main\" \r\n      [control]=\"Main\"></lcu-color-picker>\r\n  \r\n    <div fxLayout=\"row\">\r\n      <!--Light and dark colors for additional hues-->\r\n      <lcu-color-picker \r\n        class=\"lighter\" \r\n        [disabled]=\"!Unlocked.value\" \r\n        [control]=\"Lighter\" \r\n        [variants]=\"Variants\"></lcu-color-picker>\r\n  \r\n      <lcu-color-picker \r\n        class=\"darker\" \r\n        [disabled]=\"!Unlocked.value\" \r\n        [control]=\"Darker\" \r\n        [variants]=\"Variants\"></lcu-color-picker>\r\n    </div>\r\n  </div>\r\n  ","<form \r\n    [formGroup]=\"ToggleForm\" \r\n    fxLayout=\"row\" \r\n    fxLayoutAlign=\"start center\">\r\n    <mat-slide-toggle\r\n        (click)=\"$event.stopPropagation()\" \r\n        formControlName=\"toggle\"\r\n        labelPosition=\"before\" \r\n        color=\"primary\">\r\n    </mat-slide-toggle>\r\n    <span \r\n        class=\"margin-left-1 mat-card-subtitle\">\r\n        {{ ToggleMode }}\r\n    </span>\r\n</form>\r\n\r\n\r\n","<form\r\n    fxLayout=\"column\"\r\n    fxLayoutGap=\"10px\"\r\n    [formGroup]=\"Form\"\r\n    novalidate>\r\n    <div fxLayout=\"row\" fxLayoutGap=\"10px\">\r\n        <div fxFlex=\"33\" fxLayout=\"column\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" \r\n            fxLayoutAlign=\"space-between center\"\r\n            class=\"padding-left-2 padding-right-2\" \r\n            *ngFor=\"let color of PalettePickerService.PrimaryColorPalette\" \r\n            [style.background-color]=\"color.hex\" \r\n            [style.color]=\"color.darkContrast ? 'black' : 'white'\">\r\n            <div>\r\n                {{color.name}}\r\n            </div>\r\n            <div>\r\n                {{color.hex}}\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div fxFlex=\"33\" fxLayout=\"column\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" \r\n                fxLayoutAlign=\"space-between center\"\r\n                class=\"padding-left-2 padding-right-2\"\r\n                *ngFor=\"let color of PalettePickerService.AccentColorPalette\" \r\n                [style.background-color]=\"color.hex\" \r\n                [style.color]=\"color.darkContrast ? 'black' : 'white'\">\r\n                <div>\r\n                    {{color.name}}\r\n                </div>\r\n                <div>\r\n                    {{color.hex}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxFlex=\"33\" fxLayout=\"column\">\r\n            <div fxLayout=\"row\" fxLayoutGap=\"10px\" \r\n            fxLayoutAlign=\"space-between center\"\r\n            class=\"padding-left-2 padding-right-2\"\r\n            *ngFor=\"let color of PalettePickerService.WarnColorPalette\" \r\n                [style.background-color]=\"color.hex\" \r\n                [style.color]=\"color.darkContrast ? 'black' : 'white'\">\r\n                <div>\r\n                    {{color.name}}\r\n                </div>\r\n                <div>\r\n                    {{color.hex}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n\r\n","<button mat-icon-button id=\"theme-selector\" [mat-menu-trigger-for]=\"themeMenu\" tabindex=\"-1\">\r\n    <mat-icon class=\"auto-flip\">format_color_fill</mat-icon>\r\n</button>\r\n\r\n<mat-menu #themeMenu=\"matMenu\">\r\n    <lcu-mode-toggle class=\"margin-2\"></lcu-mode-toggle>\r\n    <div class=\"theme-selector-container\"\r\n        tabindex=\"-1\"\r\n        (click)=\"$event.stopPropagation();\"\r\n        (keydown.tab)=\"$event.stopPropagation()\"\r\n        (keydown.tab)=\"$event.stopPropagation()\"\r\n        (keydown.shift.tab)=\"$event.stopPropagation()\">\r\n        <div *ngFor=\"let theme of Themes\" fxLayout=\"column\">\r\n            <button mat-button class=\"theme-selector\" (click)=\"SetActiveTheme(theme)\">\r\n                <div \r\n                    fxLayout=\"row\"\r\n                    fxLayout=\"start center\"\r\n                    class=\"margin-1\">\r\n                    <div class=\"theme-primary\" [ngStyle]=\"{'background-color':theme.Primary}\">\r\n                        <div class=\"theme-accent\" [ngStyle]=\"{'background-color':theme.Accent}\"></div>\r\n                        <div class=\"theme-warn\" [ngStyle]=\"{'background-color':theme.Warn}\"></div>\r\n                        <!-- <mat-icon *ngIf=\"activeTheme===theme\" class=\"center theme-check\">check</mat-icon> -->\r\n                    </div>\r\n                    <span \r\n                    class=\"margin-left-2 mat-card-subtitle\">\r\n                        {{ theme.ID }}\r\n                    </span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n        <div class=\"margin-2 margin-top-5\">\r\n            <mat-card>\r\n                <mat-card-header>\r\n                    <div mat-card-avatar class=\"lcu-card-avatar\">\r\n                        <mat-icon color=\"accent\">palette</mat-icon>\r\n                    </div>\r\n                    <mat-card-title>\r\n                        Manual Theme\r\n                    </mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <form\r\n                    fxLayout=\"column\"\r\n                    fxLayoutGap=\"10px\"\r\n                    [formGroup]=\"ManualForm\"\r\n                    novalidate\r\n                    (click)=\"$event.stopPropagation()\">\r\n                    <mat-form-field>\r\n                        <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"manualThemeName\"\r\n                        />\r\n                        <mat-hint>Theme Name</mat-hint>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"manualPrimary\"\r\n                        />\r\n                        <mat-hint>Primary Color</mat-hint>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"manualAccent\"\r\n                        />\r\n                        <mat-hint>Accent Color</mat-hint>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <input\r\n                        type=\"text\"\r\n                        matInput\r\n                        formControlName=\"manualWarn\"\r\n                        />\r\n                        <mat-hint>Warn Color</mat-hint>\r\n                    </mat-form-field>\r\n                </form>\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button\r\n                    mat-raised-button\r\n                    color=\"primary\"\r\n                    class=\"margin-top-3\"\r\n                    [disabled]=\"!ManualForm.valid\"\r\n                    (click)=\"SetManualTheme()\"\r\n                        >\r\n                        Set Theme\r\n                    </button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n           \r\n        </div>\r\n    </div>\r\n</mat-menu>"],"sourceRoot":"webpack:///"}